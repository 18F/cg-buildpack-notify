resource_types:
- name: semver-iam
  type: docker-image
  source:
    repository: governmentpaas/semver-resource

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: check-buildpack-updates
  type: time
  source: {interval: 60m}
- name: notify-src
  type: git
  source:
    uri: ((cg-buildpack-notify))
    branch: ((cg-buildpack-notify-branch))
- name: cg-buildpack-notify-deploy-production
  type: cf
  source:
    api: ((cf-api-prod))
    username: ((deployer-username-prod))
    password: ((deployer-password-prod))
    organization: ((cf-org-prod))
    space: ((cf-space-prod))
- name: pull-request
  type: pull-request
  source:
    repo: ((cg-buildpack-notify-github-repo-name))
    access_token: ((status-access-token))
    every: true

jobs:
- name: pull-status-check
  plan:
  - get: pull-request
    version: every
    trigger: true
  - put: pull-request
    params:
      path: pull-request
      status: pending
  - task: build
    input_mapping:
      notify-src: pull-request
    file: pull-request/ci/run-tests.yml
    on_success:
      put: pull-request
      params:
        path: pull-request
        status: success
    on_failure:
      put: pull-request
      params:
        path: pull-request
        status: failure
- name: test-cg-buildpack-notify
  plan:
  - get: notify-src
    trigger: true
  - task: run-tests
    file: notify-src/ci/run-tests.yml
- name: push-cg-buildpack-notify-production
  plan:
  - aggregate:
    - get: notify-src
      passed: [test-cg-buildpack-notify]
      trigger: true
  - put: cg-buildpack-notify-deploy-production
    params:
      path: notify-src
      manifest: notify-src/manifest.yml
- name: notify-customers-prod
  plan:
  - get: check-buildpack-updates
    trigger: true
  - get: notify-src
  - task: do-notify
    file: notify-src/ci/notify.yml
    params:
      SMTP_FROM: ((smtp-from))
      SMTP_PORT: ((smtp-port))
      SMTP_PASS: ((smtp-pass))
      SMTP_USER: ((smtp-user))
      SMTP_HOST: ((smtp-host))
      CF_API: ((cf-api-prod))
      CF_ORGANIZATION: ((cf-org-prod))
      CF_SPACE: ((cf-space-prod))
      CF_USERNAME: ((deployer-username-prod))
      CF_PASSWORD: ((deployer-password-prod))
      CLIENT_ID: ((client-id-prod))
      CLIENT_SECRET: ((client-secret-prod))
      ADDITIONAL_ARGS: ((additional-args))
